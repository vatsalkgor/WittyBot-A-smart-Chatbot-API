[33mcommit 35a711b3437446b819f699605228d1198bc46903[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m)[m
Author: Vatsal <vatsalkgor@gmail.com>
Date:   Thu Mar 7 14:41:15 2019 +0530

    login register with database

[1mdiff --git a/flaskr/__init__.py b/flaskr/__init__.py[m
[1mindex 7a2bae7..aca7538 100644[m
[1m--- a/flaskr/__init__.py[m
[1m+++ b/flaskr/__init__.py[m
[36m@@ -1,16 +1,16 @@[m
 import os[m
[31m-[m
[31m-from flask import Flask, url_for, render_template, request, redirect, session, make_response[m
[31m-[m
[32m+[m[32mimport hashlib[m
[32m+[m[32mfrom flask import Flask, url_for, render_template, request, redirect, session, make_response,flash[m
[32m+[m[32mfrom flask_pymongo import PyMongo[m
 [m
 def create_app(test_config=None):[m
     # create and configure the app[m
     app = Flask(__name__, instance_relative_config=True)[m
[31m-    app.config.from_mapping([m
[31m-        SECRET_KEY='dev',[m
[31m-        DATABASE=os.path.join(app.instance_path, 'flaskr.sqlite'),[m
[31m-    )[m
[31m-[m
[32m+[m[32m    app.config['MONGO_URI'] = "mongodb://vatsal_new:vatsal123@ds161335.mlab.com:61335/wittybot"[m
[32m+[m[32m    app.secret_key="!@#sdfjgh"[m
[32m+[m[32m    mongo = PyMongo(app)[m
[32m+[m[32m    user = mongo.db.wittybot_users[m
[32m+[m[32m    # print((len(user)))[m
     if test_config is None:[m
         # load the instance config, if it exists, when not testing[m
         app.config.from_pyfile('config.py', silent=True)[m
[36m@@ -56,26 +56,29 @@[m [mdef create_app(test_config=None):[m
                 return redirect('/dashboard')[m
             else:[m
             # login logic -- in future will be replaced with database login logic. [m
[31m-                if request.form['username'] == "vatsal" and request.form['password'] == "vatsal@223":[m
[32m+[m[32m                hashed_pass = hashlib.md5(request.form['password'].encode()).hexdigest()[m
[32m+[m[32m                if user.find_one({"username":request.form['username'],"password":hashed_pass}) is not None:[m
                     session['username'] = request.form['username'];[m
[32m+[m[32m                    session['uoid'] = str(user.find_one({"username":request.form['username']})['_id'])[m
                     return redirect('dashboard')[m
                 else:[m
                     return render_template('login.html.j2',error_msg='Username or password is incorrect.')[m
         else:[m
[31m-            return redirect('/login')[m
[32m+[m[32m            return render_template("login.html.j2")[m
 [m
     @app.route('/dashboard')[m
     def dashboard():[m
         if 'username' in session:[m
             # get the all created bots by user and send it to the dashboard[m
[31m-            return render_template('dashboard.html.j2',bots=None)[m
[32m+[m
[32m+[m[32m            return render_template('dashboard.html.j2',bots=None,name=session['username'])[m
         else:[m
             return redirect('/')[m
 [m
     @app.route('/logout')[m
     def logout():[m
         # remove session here and then call login again[m
[31m-        session.pop('username')[m
[32m+[m[32m        session.clear()[m
         return redirect('/')[m
 [m
     @app.route('/mybots')[m
[36m@@ -97,8 +100,26 @@[m [mdef create_app(test_config=None):[m
             return render_template('chatbot.html.j2')[m
         return redirect('/')[m
         [m
[31m-    @app.route('/register')[m
[32m+[m[32m    @app.route('/register',methods=["GET","POST"])[m
     def register():[m
[31m-        return render_template('register.html.j2')[m
[31m-        [m
[32m+[m[32m        if request.method == "POST":[m
[32m+[m[32m            if user.find_one({"email":request.form['email']}) is None:[m
[32m+[m[32m                if user.find_one({'username':request.form['username']}) is None:[m
[32m+[m[32m                    if request.form['password'] == request.form['cpass']:[m
[32m+[m[32m                        hash_pass = hashlib.md5(request.form['password'].encode()).hexdigest()[m
[32m+[m[32m                        user_details = {"username":request.form['username'],[m
[32m+[m[32m                                        "password":hash_pass,[m
[32m+[m[32m                                        "email":request.form['email']}[m
[32m+[m[32m                        user.insert_one(user_details)[m
[32m+[m[32m                        flash("Successfully registered.")[m
[32m+[m[32m                        return redirect(url_for("login"))[m
[32m+[m[32m                    else:[m
[32m+[m[32m                        render_template('register.html.j2',fail_msg="Password and Confirm Password does not match")[m
[32m+[m[32m                else:[m
[32m+[m[32m                    return render_template("register.html.j2",fail_msg="Choose a different username. ")[m
[32m+[m[32m            else:[m
[32m+[m[32m                return render_template("register.html.j2",fail_msg="User already registered.")[m
[32m+[m[32m        else:[m
[32m+[m[32m            return render_template('register.html.j2')[m
[32m+[m
     return app[m
\ No newline at end of file[m
[1mdiff --git a/flaskr/templates/blank-page.html.j2 b/flaskr/templates/blank-page.html.j2[m
[1mindex c342886..d522fb4 100644[m
[1m--- a/flaskr/templates/blank-page.html.j2[m
[1m+++ b/flaskr/templates/blank-page.html.j2[m
[36m@@ -44,7 +44,7 @@[m
 							<div class="dropdown-menu dropdown-menu-right nav-user-dropdown" aria-labelledby="navbarDropdownMenuLink2">[m
 								<div class="nav-user-info">[m
 									<h5 class="mb-0 text-white nav-user-name">[m
[31m-										John Abraham[m
[32m+[m										[32m{{ name }}[m
 									</h5>[m
 								</div>[m
 								<a class="dropdown-item" href="#"><i class="fas fa-user mr-2"></i>Account</a>[m
[1mdiff --git a/flaskr/templates/login.html.j2 b/flaskr/templates/login.html.j2[m
[1mindex 9565a41..fa33a9d 100644[m
[1m--- a/flaskr/templates/login.html.j2[m
[1m+++ b/flaskr/templates/login.html.j2[m
[36m@@ -34,6 +34,11 @@[m
                 {% if error_msg %}[m
                 <div class="alert alert-danger">{{ error_msg }}</div>[m
                 {% endif %}[m
[32m+[m[32m                {% with success_msg = get_flashed_messages() %}[m
[32m+[m[32m                {% if success_msg %}[m
[32m+[m[32m                <div class="alert alert-success">{{ success_msg }}</div>[m
[32m+[m[32m                {% endif %}[m
[32m+[m[32m                {% endwith %}[m
                 <form method="post" action="/login">[m
                     <div class="form-group">[m
                         <input class="form-control form-control-lg" name="username" required="" id="username" type="text" placeholder="Username" autocomplete="off">[m
[1mdiff --git a/flaskr/templates/register.html.j2 b/flaskr/templates/register.html.j2[m
[1mindex 952a6b0..9b05f43 100644[m
[1m--- a/flaskr/templates/register.html.j2[m
[1m+++ b/flaskr/templates/register.html.j2[m
[36m@@ -26,31 +26,34 @@[m
 </style>[m
 </head>[m
 <body>[m
[31m-    <form class="splash-container">[m
[32m+[m[32m    <form class="splash-container" method="POST" action="/register">[m
         <div class="card">[m
             <div class="card-header">[m
                 <h3 class="mb-1">Registrations Form</h3>[m
                 <p>Please enter your user information.</p>[m
             </div>[m
             <div class="card-body">[m
[32m+[m[32m                {% if fail_msg %}[m
[32m+[m[32m                <div class="alert alert-danger">{{ fail_msg }}</div>[m
[32m+[m[32m                {% endif %}[m
                 <div class="form-group">[m
[31m-                    <input class="form-control form-control-lg" type="text" name="nick" required="" placeholder="Username" autocomplete="off">[m
[32m+[m[32m                    <input class="form-control form-control-lg" type="text" name="username" required="" placeholder="Username" autocomplete="off">[m
                 </div>[m
                 <div class="form-group">[m
                     <input class="form-control form-control-lg" type="email" name="email" required="" placeholder="E-mail" autocomplete="off">[m
                 </div>[m
                 <div class="form-group">[m
[31m-                    <input class="form-control form-control-lg" id="pass1" type="password" required="" placeholder="Password">[m
[32m+[m[32m                    <input class="form-control form-control-lg" id="pass1" name="password" type="password" required="" placeholder="Password">[m
                 </div>[m
                 <div class="form-group">[m
[31m-                    <input class="form-control form-control-lg" required="" placeholder="Confirm">[m
[32m+[m[32m                    <input class="form-control form-control-lg" required="" name="cpass" placeholder="Confirm">[m
                 </div>[m
                 <div class="form-group pt-2">[m
                     <button class="btn btn-block btn-primary" type="submit">Register My Account</button>[m
                 </div>[m
                 <div class="form-group">[m
                     <label class="custom-control custom-checkbox">[m
[31m-                        <input class="custom-control-input" type="checkbox"><span class="custom-control-label">By creating an account, you agree the <a href="#">terms and conditions</a></span>[m
[32m+[m[32m                        <input class="custom-control-input" type="checkbox" required><span class="custom-control-label">By creating an account, you agree the <a href="#">terms and conditions</a></span>[m
                     </label>[m
                 </div>[m
             </div>[m
